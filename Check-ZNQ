-- ZNQ MAIN FILE Writer - Heartbeat <UserId>.main
-- Yêu cầu executor có: isfile / readfile / writefile / delfile / appendfile

do
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local lp = Players.LocalPlayer
    if not lp then return warn("[ZNQ] LocalPlayer chưa sẵn sàng") end

    -- ========== Tùy chọn ==========
    -- Chu kỳ ghi (giây). Ví dụ: set trước khi inject -> getgenv().main_file_interval = 2
    local INTERVAL = tonumber(getgenv().main_file_interval) or 1
    -- Tự xóa file trước khi ghi (true: xóa rồi ghi lại để luôn “mới”)
    local AUTODELETE = (getgenv().main_file_autodelete ~= false)  -- default true
    -- Bật/tắt overlay FPS (default: tắt). Muốn bật: getgenv().disable_ui = false
    if getgenv().disable_ui == nil then getgenv().disable_ui = true end
    -- ===============================

    -- ======= API file wrapper cho executor =======
    local function has(fn) return typeof(getfenv()[fn]) == "function" end

    local function file_exists(path)
        if has("isfile") then
            return isfile(path)
        else
            local ok = pcall(function() readfile(path) end)
            return ok
        end
    end

    local function write_file(path, content)
        if has("writefile") then
            return writefile(path, content)
        elseif has("appendfile") then
            if has("delfile") and file_exists(path) then pcall(delfile, path) end
            return appendfile(path, content)
        else
            error("[ZNQ] Executor không hỗ trợ writefile/appendfile")
        end
    end

    local function delete_file(path)
        if has("delfile") then pcall(delfile, path) end
    end
    -- =============================================

    local userId = lp.UserId
    local filename = tostring(userId) .. ".main"

    -- Hàm dựng nội dung
    local function build_content()
        -- Ưu tiên nội dung custom do bạn cấp:
        -- getgenv().main_file_content = "ALIVE"  -- hoặc một function(lp) -> string
        local custom = getgenv().main_file_content
        if type(custom) == "function" then
            local ok, val = pcall(custom, lp)
            if ok and type(val) == "string" then return val end
        elseif type(custom) == "string" then
            return custom
        end
        -- Mặc định: ghi heartbeat đầy đủ
        local ts = os.time()
        local placeId = tostring(game.PlaceId or "")
        local jobId = tostring(game.JobId or "")
        local uname = lp.Name or ""
        return string.format("UID=%s|NAME=%s|PLACE=%s|JOB=%s|TS=%d", userId, uname, placeId, jobId, ts)
    end

    -- (Tuỳ chọn) Overlay FPS rất nhẹ (mặc định tắt)
    if not getgenv().disable_ui then
        local gui_ok, gui_err = pcall(function()
            local sg = Instance.new("ScreenGui")
            sg.Name = "ZNQ_FPS_Overlay"
            sg.ResetOnSpawn = false
            sg.Parent = game:GetService("CoreGui")

            local label = Instance.new("TextLabel")
            label.Parent = sg
            label.Size = UDim2.new(0, 320, 0, 56)
            label.Position = UDim2.new(0, 10, 0, 10)
            label.BackgroundTransparency = 1
            label.TextStrokeTransparency = 0
            label.TextScaled = true
            label.Font = Enum.Font.FredokaOne

            local frames, lastTick, hue = 0, tick(), 0
            RunService.RenderStepped:Connect(function(dt)
                hue = (hue + dt * 0.5) % 1
                label.TextColor3 = Color3.fromHSV(hue, 1, 1)
                frames += 1
                local now = tick()
                if now - lastTick >= 1 then
                    local fps = math.floor(frames / (now - lastTick))
                    label.Text = string.format("%s | FPS: %d", lp.Name, fps)
                    frames, lastTick = 0, now
                end
            end)
        end)
        if not gui_ok then warn("[ZNQ] Không thể tạo overlay:", gui_err) end
    end

    -- Vòng lặp heartbeat
    task.spawn(function()
        while true do
            pcall(function()
                if AUTODELETE and file_exists(filename) then delete_file(filename) end
                write_file(filename, build_content())
            end)
            task.wait(INTERVAL)
        end
    end)
end
